{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","setTodos","inputText","setInputText","setStatus","value","onChange","e","target","type","className","placeholder","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAoCeA,EApCF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAmBxD,OACE,iCACE,uBAAOC,MAAOH,EAAWI,SApBJ,SAACC,GACxBJ,EAAaI,EAAEC,OAAOH,QAmBiCI,KAAK,OAAOC,UAAU,aAAaC,YAAY,kBACpG,wBAAQC,QAlBc,SAACL,GACzBA,EAAEM,iBACFZ,EAAS,GAAD,mBACHD,GADG,CAEN,CACEc,KAAMZ,EACNa,WAAW,EACXC,GAAoB,IAAhBC,KAAKC,aAGbf,EAAa,KAQyBO,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQJ,SAVQ,SAACC,GACrBH,EAAUG,EAAEC,OAAOH,QASkBc,KAAK,QAAQT,UAAU,cAAxD,UACE,wBAAQL,MAAM,MAAd,uBACA,wBAAQA,MAAM,YAAd,yBACA,wBAAQA,MAAM,cAAd,kC,OCFKe,EA3BF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMrB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAcjC,OACE,sBAAKS,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAeW,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAbY,WACtBX,EAASD,EAAMsB,KAAI,SAAAC,GACjB,OAAIA,EAAKP,KAAOK,EAAKL,GACZ,2BACFO,GADL,IACWR,WAAYQ,EAAKR,YAGvBQ,OAM2Bb,UAAU,eAA5C,SACE,mBAAGA,UAAU,mBAEf,wBAAQE,QAnBU,WACpBX,EAASD,EAAMwB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAkBTN,UAAU,YAA1C,SACE,mBAAGA,UAAU,uBCANgB,EAnBE,SAAC,GAAwC,IAAtC1B,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAU0B,EAAoB,EAApBA,cACnC,OACE,qBAAKjB,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGiB,EAAcL,KAAI,SAAAD,GAAI,OACrB,cAAC,EAAD,CAEEP,KAAMO,EAAKP,KACXO,KAAMA,EACNrB,MAAOA,EACPC,SAAUA,EACV0B,cAAeA,GALVN,EAAKL,YC4DPY,MA/Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN3B,EADM,KACKC,EADL,OAEa0B,mBAAS,IAFtB,mBAEN7B,EAFM,KAECC,EAFD,OAGe4B,mBAAS,OAHxB,mBAGNC,EAHM,KAGE1B,EAHF,OAI6ByB,mBAAS,IAJtC,mBAINF,EAJM,KAISI,EAJT,KAMbC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,IACAC,MACC,CAACnC,EAAO8B,IAEX,IAAMI,EAAgB,WACpB,OAAQJ,GACN,IAAK,YACHC,EAAiB/B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHgB,EAAiB/B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEgB,EAAiB/B,KAKjBmC,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUvC,KAGzCiC,EAAgB,WACpB,GAAsC,OAAlCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDvC,EAASwC,KAIb,OACE,sBAAK/B,UAAU,MAAf,UACE,iCACE,4CAEF,cAAC,EAAD,CACEV,MAAOA,EACPC,SAAUA,EACVC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,IAEb,cAAC,EAAD,CACEJ,MAAOA,EACPC,SAAUA,EACV0B,cAAeA,QClDRgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c56dfd5c.chunk.js","sourcesContent":["const Form = ({ todos, setTodos, inputText, setInputText, setStatus }) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  }\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      {\n        text: inputText,\n        completed: false,\n        id: Math.random() * 1000\n      }\n    ])\n    setInputText(\"\");\n  }\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  }\n  return (\n    <form>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" placeholder=\"agregar tarea\" />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">Ver Todos</option>\n          <option value=\"completed\">Completados</option>\n          <option value=\"uncompleted\">Incompletos</option>\n        </select>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","const Todo = ({ text, todo, todos, setTodos }) => {\n  const deleteHandler = () => {\n    setTodos(todos.filter(el => el.id !== todo.id))\n  }\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return {\n          ...item, completed: !item.completed\n        }\n      }\n      return item;\n    }))\n  }\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map(todo => (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            todo={todo}\n            todos={todos}\n            setTodos={setTodos}\n            filteredTodos={filteredTodos}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo App</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}